ethereum_cl_bootnode: "{{ hostvars['bootnode-1']['cl_bootnode_fact_enr'] }}"

# role: eth_inventory_web
eth_inventory_web_container_networks: "{{ docker_networks_shared }}"
eth_inventory_web_container_env:
  VIRTUAL_HOST: "{{ server_fqdn }}"
  VIRTUAL_PORT: "80"
  VIRTUAL_PATH: "/meta/api"
  VIRTUAL_DEST: "/"
  LETSENCRYPT_HOST: "{{ server_fqdn }}"

# role: ethpandaops.general.bootstrap
bootstrap_default_user_authorized_keys_github_team_cl:
  - zah
  - tersec
  - etan-status
  - arnetheduck

# role: ethpandaops.general.bootstrap
bootstrap_default_user_authorized_keys_github_team_el:
  - g11tech
  - acolytec3
  - holgerd77
  - jochem-brouwer

# role: ethpandaops.general.ethereum_node
ethereum_node_el: ethereumjs
ethereum_node_cl: nimbus

# role: validator_keys
validator_keys_sync_files:
  - src: "{{ inventory_dir }}/files/validator_keys/{{ inventory_hostname }}/nimbus-keys/"
    dest: "{{ nimbus_validator_datadir }}/keys/"
  - src: "{{ inventory_dir }}/files/validator_keys/{{ inventory_hostname }}/secrets/"
    dest: "{{ nimbus_validator_datadir }}/secrets/"

validator_bls_sync_files:
  - src: "{{ inventory_dir }}/files/validator_keys/{{ inventory_hostname }}/change_operations.json"
    dest: "{{ nimbus_validator_datadir }}/change_operations.json"
    owner: nimbus
    group: nimbus

# role: ethpandaops.general.nimbus
nimbus_container_name: beacon
nimbus_container_image: "{{ default_ethereum_client_images.nimbus }}"
nimbus_container_env:
  VIRTUAL_HOST: "{{ ethereum_node_beacon_hostname }}"
  VIRTUAL_PORT: "{{ ethereum_node_cl_ports_http_beacon | string }}"
  LETSENCRYPT_HOST: "{{ ethereum_node_beacon_hostname }}"
nimbus_container_volumes:
  - "{{ nimbus_datadir }}:/data"
  - "{{ nimbus_auth_jwt_path }}:/execution-auth.jwt:ro"
  - "{{ eth_testnet_config_dir }}:/network-config:ro"
nimbus_container_command_extra_args: >-
  {{ nimbus_container_command_extra_simple_args  }}
nimbus_container_command_extra_simple_args:
  - --network=/network-config
  - --validator-monitor-auto=false
  - --doppelganger-detection=off
  - --log-level=INFO
  - --light-client-data-serve=false
  - --graffiti={{ ansible_hostname }}
nimbus_validator_datadir: /data/nimbus-validator
nimbus_container_validator_volumes:
  - "{{ nimbus_validator_datadir }}:/validator-data"
nimbus_container_pull: true


# role: ethpandaops.general.ethereumjs
ethereumjs_container_name: execution
ethereumjs_container_image: "{{ default_ethereum_client_images.ethereumjs }}"
ethereumjs_container_env:
  VIRTUAL_HOST: "{{ ethereum_node_rcp_hostname }}"
  VIRTUAL_PORT: "{{ ethereum_node_el_ports_http_rpc | string }}"
  LETSENCRYPT_HOST: "{{ ethereum_node_rcp_hostname }}"
ethereumjs_container_volumes:
  - "{{ ethereumjs_datadir }}:/data"
  - "{{ ethereumjs_auth_jwt_path }}:/execution-auth.jwt:ro"
  - "{{ eth_testnet_config_dir }}:/network-config:ro"

ethereum_node_fact_discovery_el_enode_cmd:
  ethereumjs: cat /data/ethereumjs/genesis/rlpx

ethereumjs_container_command_extra_args:
  - --gethGenesis=/network-config/genesis.json
  - --maxPeers=75
  - --isSingleNode=true

# role: ethpandaops.general.prometheus
prometheus_remote_push_url: https://victoriametrics.ethdevops.io/insert/0/prometheus/api/v1/write
prometheus_remote_write_username: "{{ secret_prometheus_remote_write.username }}"
prometheus_remote_write_password: "{{ secret_prometheus_remote_write.password }}"
prometheus_config: |
  global:
    scrape_interval: 30s
    evaluation_interval: 30s
    scrape_timeout: 10s
    external_labels:
      instance: "{{ inventory_hostname }}"
      ip_address: "{{ ansible_host }}"
      network: "{{ ethereum_network_name }}"
      testnet: "{{ ethereum_network_name }}"
      execution_client: "{{ ethereum_node_el }}"
      consensus_client: "{{ ethereum_node_cl }}"
  remote_write:
    - queue_config:
        batch_send_deadline: 5s
        max_backoff: 500ms
        max_samples_per_send: 500
        min_backoff: 50ms
        max_shards: 100
      url: {{ prometheus_remote_push_url }}
      remote_timeout: 10s
      basic_auth:
        username: {{ prometheus_remote_write_username }}
        password: {{ prometheus_remote_write_password }}
  scrape_configs:
    - job_name: "prometheus"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["localhost:9090"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "node"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["172.17.0.1:9100"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "exporter"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["ethereum-metrics-exporter:9090"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "consensus_node"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["{{ vars[ethereum_node_cl + '_container_name'] }}:{{ ethereum_node_cl_ports_metrics }}"]
          labels:
            instance: "{{ inventory_hostname }}"
